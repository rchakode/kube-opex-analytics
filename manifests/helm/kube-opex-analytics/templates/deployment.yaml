apiVersion: apps/v1
{{- if .Values.dataVolume.persist }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "kube-opex-analytics.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kube-opex-analytics.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
{{- if .Values.dataVolume.persist }}
  serviceName: {{ include "kube-opex-analytics.fullname" . }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kube-opex-analytics.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kube-opex-analytics.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.uid }}
        fsGroup: {{ .Values.securityContext.gid }}
    {{- end }}
      serviceAccountName: {{ include "kube-opex-analytics.fullname" . }}
      restartPolicy: Always
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ include "kube-opex-analytics.imageVersion" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.envs }}
          env:
          {{- range $key, $val := .Values.envs }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
          {{- end }}
        {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data/
              name: data-vol
            - mountPath: /koa/static/data/
              name: static-data-vol
      volumes:
      - name: static-data-vol
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.dataVolume.persist }}
  volumeClaimTemplates:
  - metadata:
      name: data-vol
    spec:
      accessModes:
        - ReadWriteOnce
      {{- if .Values.dataVolume.storageClass }}
      storageClassName: {{ .Values.dataVolume.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.dataVolume.capacity }}
{{- else }}
      - name: data-vol
        emptyDir: {}
{{- end }}
